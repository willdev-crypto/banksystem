from banco import (
    listar_usuarios,
    buscar_usuario_por_cpf,
    obter_extrato,
    movimentacoes
)
from getpass import getpass
from werkzeug.security import check_password_hash


def admin_login():
    print("\nüîê Login de Administrador CLI üîê")
    cpf = input("CPF do administrador: ")
    senha = getpass("Senha: ")

    usuario = buscar_usuario_por_cpf(cpf)
    if usuario and usuario.get('admin'):
        if check_password_hash(usuario['senha'], senha):
            print(f"\n‚úÖ Bem-vindo, {usuario['nome']}! Acesso concedido ao painel administrativo.\n")
            return usuario
        else:
            print("‚ùå Senha incorreta.")
    else:
        print("‚ùå CPF n√£o encontrado ou n√£o √© um administrador.")
    return None


def menu_admin(usuario):
    while True:
        print("\n=== Painel Administrativo CLI ===")
        print("[1] Listar usu√°rios")
        print("[2] Consultar dados de um usu√°rio")
        print("[3] Ver extrato de um usu√°rio")
        print("[4] Ver todas as movimenta√ß√µes")
        print("[5] Sair")

        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == '1':
            print("\nüìú Lista de Usu√°rios:")
            usuarios = listar_usuarios()
            for u in usuarios:
                status = "Administrador" if u.get('admin') else "Cliente"
                print(f"‚û°Ô∏è {u['nome']} | CPF: {u['cpf']} | Conta: {u.get('agencia', 'N/A')}-{u.get('conta', 'N/A')} | Saldo: R$ {u.get('saldo', 0.00):.2f} | {status}")

        elif opcao == '2':
            cpf = input("Informe o CPF do usu√°rio: ")
            u = buscar_usuario_por_cpf(cpf)
            if u:
                status = "Administrador" if u.get('admin') else "Cliente"
                print(f"""
üîç Dados do Usu√°rio:
‚û°Ô∏è Nome: {u['nome']}
‚û°Ô∏è CPF: {u['cpf']}
‚û°Ô∏è Data de Nascimento: {u['data_nascimento']}
‚û°Ô∏è Endere√ßo: {u['endereco']}
‚û°Ô∏è E-mail: {u['email']}
‚û°Ô∏è Ag√™ncia: {u.get('agencia', 'N/A')}
‚û°Ô∏è Conta: {u.get('conta', 'N/A')}
‚û°Ô∏è Saldo: R$ {u.get('saldo', 0.00):.2f}
‚û°Ô∏è Tipo: {status}
""")
            else:
                print("‚ùå Usu√°rio n√£o encontrado.")

        elif opcao == '3':
            cpf = input("Informe o CPF do usu√°rio: ")
            extrato = obter_extrato(cpf)
            if extrato:
                print("\nüìú Extrato do usu√°rio:")
                for e in extrato:
                    print(f"{e['data_hora']} | {e['tipo'].capitalize()} | R$ {e['valor']:.2f}")
            else:
                print("‚ö†Ô∏è Nenhuma movimenta√ß√£o encontrada para esse CPF.")

        elif opcao == '4':
            print("\nüìú Todas as movimenta√ß√µes do sistema:")
            if movimentacoes:
                for e in movimentacoes:
                    print(f"{e.get('data_hora', 'Data desconhecida')} | CPF: {e.get('cpf', 'N/A')} | {e.get('tipo', 'N/A').capitalize()} | R$ {e.get('valor', 0.00):.2f}")

            else:
                print("‚ö†Ô∏è Nenhuma movimenta√ß√£o registrada no sistema.")

        elif opcao == '5':
            print("Encerrando painel administrativo CLI...")
            break

        else:
            print("‚ùå Op√ß√£o inv√°lida.")


def main():
    print("=== Admin CLI Bank System ===")
    usuario = admin_login()
    if usuario:
        menu_admin(usuario)


if __name__ == "__main__":
    main()
